### 13. Event Listeners in Android

In the `activity_main` XML file, we were able to define button click behaviour by adding an android:onClick attribute to the TextViews in the XML layout.
This is a nice shortcut in XML that Android provides. However, there is a method that professional Android developers use to attach button code logic to their app.
This method involves exclusively Java code and no XML changes. 

When a user interacts with their Android device, they interact with the apps by touching the screen, and these correspond to **user input events** in Android.
For example, there is a **click event** when a View is pressed. Other examples include long click, drag events, key events (when you press a key on the keyboard), etc.


Say the user clicked a button on the screen. The screen hardware will detect the touch and notify Android that a click has occurred. 
Android will then identify the View at the location that the user touched the screen. 
You can choose to get notified when certain events happen on a specific View. In this case, you can get notified when the user touches a specific View.
When you want to be notified about a certain event happening, it's known as **listening** for an event.
Once you know the event has happened, you can program what should happen when a user interacts with a specific part of your UI. 

To set this up, you can create an **EventListener Object** for the specified view, and you specify what should happen when the event occurs.
In this case, we are interested in click events, so we create an `onClickListener` and *fill out instructions that should happen when the onClick method is called*.
These instructions can be anything from opening a new screen when the user clicks on the view, change the appearance of the view, etc.

Once you've created the `onClickListener`, the last step is to attach it to the View that we want to listen for clicks on.
This way, when the click event occurs, if the view has a click listener associated with it, Android will execute the code for the onClickListener.

Event listeners are a collection of nested interfaces with callback methods that are useful for UI events. These methods are called by the Android framework when the respective actions occurs on that object.
For instance, when a `View` (such as a `Button`) is touched, the `onTouchEvent()` method is called on that View object.

Each event listener is an interface in the `View` class that contains a **single** callback method. 